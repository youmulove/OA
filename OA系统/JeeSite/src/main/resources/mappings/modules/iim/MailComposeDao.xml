<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.iim.dao.MailComposeDao">
    
	<sql id="mailComposeColumns">
		a.id AS "id",
		a.status AS "status",
		a.readstatus AS "readstatus",
		a.senderid AS "sender.id",
		a.receiverid AS "receiver.id",
		a.sendtime AS "sendtime",
		a.mailid AS "mail.id",
		sender.name as "sender.name",
		receiver.name AS "receiver.name",
		mail.title AS "mail.title",
		mail.overview AS "mail.overview",
		mail.content AS "mail.content"
	</sql>
	
	<sql id="mailComposeColumns1">
		a.status AS "status",
		a.senderid AS "sender.id",
		a.sendtime AS "sendtime",
		a.mailid AS "mail.id",
		sender.name as "sender.name",
		mail.title AS "mail.title",
		mail.overview AS "mail.overview"
	<!-- 	SUBSTR(to_char(mail.content), 0, 100) AS "mail.content" -->
	</sql>
	<sql id="mailComposeJoins">
		LEFT JOIN sys_user receiver ON receiver.id = a.receiverid
		LEFT JOIN iim_mail mail ON mail.id = a.mailid
		LEFT JOIN sys_user sender ON sender.id = a.senderid
	</sql>
	
	<sql id="mailComposeJoins1">
		LEFT JOIN iim_mail mail ON mail.id = a.mailid
		LEFT JOIN sys_user sender ON sender.id = a.senderid
	</sql>
      <resultMap type="MailCompose" id="MailMap" autoMapping="true">
    	<association property="mail"  javaType="Mail">
			<id property="id" column="mail.id"/>
			<result property="title" column="mail.title"/>
			<result property="overview" column="mail.overview"/>
			<result property="content" column="mail.content"/>
			<!-- typeHandler="com.thinkgem.jeesite.common.mapper.ConvertBlobTypeHandler" -->
		</association>
	</resultMap>
	<select id="get" resultMap="MailMap">
		SELECT 
			<include refid="mailComposeColumns"/>
		FROM iim_mail_compose a
		<include refid="mailComposeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="get2" resultType="MailCompose">
		SELECT 
			<include refid="mailComposeColumns"/>
		FROM iim_mail_compose a
		<include refid="mailComposeJoins"/>
		WHERE a.mailid = #{mailId} and a.status='1'
	</select>
	<select id="get3" resultType="MailCompose">
		SELECT 
			<include refid="mailComposeColumns"/>
		FROM iim_mail_compose a
		<include refid="mailComposeJoins"/>
		WHERE a.mailid = #{mailId} and a.status='0'
	</select>
	
	<select id="findList" resultType="MailCompose">
		SELECT  distinct
			<include refid="mailComposeColumns1"/>
		FROM iim_mail_compose a
		<include refid="mailComposeJoins1"/>
		<where>
			<if test="status != null  and status != ''">
				AND a.status = #{status}
			</if>
			
			<if test="mail != null and mail.title != null and mail.title != ''">
				AND ( mail.title like 
					<if test="dbName == 'oracle'">'%'||#{mail.title}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{mail.title}, '%')</if>
					or 
					mail.content like
					<if test="dbName == 'oracle'">'%'||#{mail.title}||'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{mail.title}, '%')</if>
					)
			</if>
			AND a.senderid=#{currentUser.id}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MailCompose">
		SELECT 
			<include refid="mailComposeColumns"/>
		FROM iim_mail_compose a
		<include refid="mailComposeJoins"/>
		<where>
			 a.senderid=#{currentUser.id}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="getCount" resultType="java.lang.Integer">
		SELECT count(*)
		from
		(select distinct 
			<include refid="mailComposeColumns1"/>
		FROM iim_mail_compose a
		<include refid="mailComposeJoins1"/>
		<where>
			<if test="sender != null and sender.id != null and sender.id != ''">
				AND a.senderid = #{sender.id}
			</if>
			
			<if test="status !=null and status != ''">
				and a.status = #{status}
			</if>
		</where>		
	)
	</select>
	
	<insert id="insert">
		INSERT INTO iim_mail_compose(
			id,
			status,
			readstatus,
			senderid,
			receiverid,
			sendtime,
			mailid
		) VALUES (
			#{id},
			#{status},
			#{readstatus},
			#{sender.id},
			#{receiver.id},
			#{sendtime},
			#{mail.id}
		)
	</insert>
	
	<update id="update">
		UPDATE iim_mail_compose SET 	
			status = #{status},
			readstatus = #{readstatus},
			senderid = #{sender.id},
			receiverid = #{receiver.id},
			sendtime = #{sendtime},
			mailid = #{mail.id}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM iim_mail_compose
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE mailid = #{mail.id}
			</otherwise>
		</choose>
	</update>
	
	<!-- <update id="deleteByLogic">
		DELETE FROM iim_mail_compose
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE mailid = #{mail.id}
			</otherwise>
		</choose>
	</update>-->
	
</mapper>